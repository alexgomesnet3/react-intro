{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/curso_react/exercicios-react/src/componentes/MultElementos.jsx\";\nimport React from 'react';\n/* Abaixo a Terceira Solução para componentes com Multiplos Elementos\n   Usando-se um Array de Elementos, aproveitando o comportamento do JSX */\n\nexport default (props => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Parte 1\"), React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Parte 2\")));\n/* Abaixo a Segunda Solução para componentes com Multiplos Elementos\n   Usando o React.Fragment que forma um fragmento React Padrão no HTML */\n// export default props => \n//     <React.Fragment>\n//         <h1>Parte 1</h1>\n//         <h2>Parte 2</h2>   \n//     </React.Fragment>\n\n/* Abaixo a Primeira Solução para componentes com Multiplos Elementos\n   Em 90% dos casos de desenvolvimento, usa-se uma DIV para envolver os elementos */\n// export default props => \n//     <div>\n//         <h1>Parte 1</h1>\n//         <h2>Parte 2</h2>   \n//     </div>","map":{"version":3,"sources":["/Applications/MAMP/htdocs/curso_react/exercicios-react/src/componentes/MultElementos.jsx"],"names":["React","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;AAEA,gBAAeC,KAAK,IAChB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ;AAMA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\n\n/* Abaixo a Terceira Solução para componentes com Multiplos Elementos\n   Usando-se um Array de Elementos, aproveitando o comportamento do JSX */ \nexport default props => \n    <React.Fragment>\n        <h1>Parte 1</h1>\n        <h2>Parte 2</h2>   \n    </React.Fragment>\n\n/* Abaixo a Segunda Solução para componentes com Multiplos Elementos\n   Usando o React.Fragment que forma um fragmento React Padrão no HTML */\n// export default props => \n//     <React.Fragment>\n//         <h1>Parte 1</h1>\n//         <h2>Parte 2</h2>   \n//     </React.Fragment>\n\n\n/* Abaixo a Primeira Solução para componentes com Multiplos Elementos\n   Em 90% dos casos de desenvolvimento, usa-se uma DIV para envolver os elementos */\n// export default props => \n//     <div>\n//         <h1>Parte 1</h1>\n//         <h2>Parte 2</h2>   \n//     </div>\n"]},"metadata":{},"sourceType":"module"}